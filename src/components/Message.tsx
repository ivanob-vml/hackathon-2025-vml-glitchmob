import React from 'react';
import { MessageSquare } from 'lucide-react';

interface MessageProps {
  isBot: boolean;
  text: string;
  timestamp?: string;
  className?: string;
  avatar?: string;
}

const Message: React.FC<MessageProps> = ({ 
  isBot, 
  text, 
  timestamp, 
  className = '',
  avatar
}) => {
  return (
    <div
      className={`max-w-[80%] p-4 rounded-2xl ${
        isBot ? 'bg-gray-100 text-gray-800' : 'bg-[#4927AF] text-white'
      } ${className}`}
    >
      {/* <div className="flex items-start space-x-2">
        {isBot && (
          avatar ? (
            <img 
              src={avatar} 
              alt="Bot Avatar" 
              className="w-5 h-5 rounded-full mt-1" 
            />
          ) : (
            <MessageSquare className="w-5 h-5 mt-1" />
          )
        )}
        <div>
          <p>{text}</p>
          {timestamp && (
            <span className="text-xs opacity-70 mt-1 block">
              {timestamp}
            </span>
          )}
        </div> */}
        
        {isBot && <div
            className="flex self-stretch justify-start items-start flex-row gap-2.5 bg-[#F4F4F4] rounded-lg items-center ">
            <div
                className="flex justify-center items-center flex-row gap-2.5 p-2.5 bg-[#4927AF] rounded-[60px] w-[40px] h-[40px]"
                style={{ width: '40px' }}>
                <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M16.9349 7.53046C17.0057 7.4597 17.054 7.36952 17.0735 7.27134C17.0931 7.17315 17.0831 7.07137 17.0448 6.97887C17.0064 6.88638 16.9415 6.80734 16.8583 6.75176C16.775 6.69618 16.6771 6.66655 16.577 6.66663H3.42295C3.32283 6.66655 3.22494 6.69618 3.14166 6.75176C3.05839 6.80734 2.99348 6.88638 2.95516 6.97887C2.91683 7.07137 2.90682 7.17315 2.92637 7.27134C2.94592 7.36952 2.99417 7.4597 3.06501 7.53046L9.49404 13.9586V17.7965H7.47034C7.33616 17.7965 7.20748 17.8498 7.1126 17.9447C7.01772 18.0395 6.96442 18.1682 6.96442 18.3024C6.96442 18.4366 7.01772 18.5652 7.1126 18.6601C7.20748 18.755 7.33616 18.8083 7.47034 18.8083H12.5296C12.6638 18.8083 12.7924 18.755 12.8873 18.6601C12.9822 18.5652 13.0355 18.4366 13.0355 18.3024C13.0355 18.1682 12.9822 18.0395 12.8873 17.9447C12.7924 17.8498 12.6638 17.7965 12.5296 17.7965H10.5059V13.9586L16.9349 7.53046ZM15.3539 7.67843L14.3421 8.69024H5.65597L4.64412 7.67843H15.3539Z"
                    fill="white" />
                <path
                    d="M14.5405 5.57399C14.5412 5.6677 14.5091 5.75929 14.4488 5.83616C14.3885 5.91303 14.3029 5.97139 14.2037 6.00322L12.5365 6.55083L11.9224 8.0339C11.8861 8.12172 11.8203 8.19751 11.7339 8.25105C11.6476 8.30459 11.5448 8.33329 11.4395 8.33329C11.3343 8.33329 11.2315 8.30459 11.1452 8.25105C11.0588 8.19751 10.993 8.12172 10.9566 8.0339L10.3386 6.55083L8.67019 6.00495C8.57139 5.97262 8.48612 5.91413 8.4259 5.83738C8.36567 5.76062 8.33337 5.66929 8.33337 5.57571C8.33337 5.48213 8.36567 5.3908 8.4259 5.31404C8.48612 5.23729 8.57139 5.1788 8.67019 5.14648L10.3386 4.59715L10.9528 3.11407C10.9891 3.02625 11.0549 2.95046 11.1413 2.89692C11.2276 2.84339 11.3304 2.81468 11.4357 2.81468C11.5409 2.81468 11.6437 2.84339 11.73 2.89692C11.8164 2.95046 11.8822 3.02625 11.9185 3.11407L12.5365 4.59715L14.205 5.14303C14.3042 5.17515 14.3898 5.23386 14.4499 5.31105C14.51 5.38824 14.5417 5.48012 14.5405 5.57399ZM12.7305 2.81585H13.2476V3.27554C13.2476 3.3365 13.2749 3.39496 13.3234 3.43806C13.3718 3.48117 13.4376 3.50538 13.5062 3.50538C13.5748 3.50538 13.6405 3.48117 13.689 3.43806C13.7375 3.39496 13.7648 3.3365 13.7648 3.27554V2.81585H14.2819C14.3505 2.81585 14.4163 2.79163 14.4648 2.74853C14.5133 2.70543 14.5405 2.64696 14.5405 2.58601C14.5405 2.52505 14.5133 2.46658 14.4648 2.42348C14.4163 2.38038 14.3505 2.35616 14.2819 2.35616H13.7648V1.89647C13.7648 1.83551 13.7375 1.77705 13.689 1.73395C13.6405 1.69084 13.5748 1.66663 13.5062 1.66663C13.4376 1.66663 13.3718 1.69084 13.3234 1.73395C13.2749 1.77705 13.2476 1.83551 13.2476 1.89647V2.35616H12.7305C12.6619 2.35616 12.5961 2.38038 12.5476 2.42348C12.4991 2.46658 12.4719 2.52505 12.4719 2.58601C12.4719 2.64696 12.4991 2.70543 12.5476 2.74853C12.5961 2.79163 12.6619 2.81585 12.7305 2.81585ZM15.5748 3.73523H15.3162V3.50538C15.3162 3.44443 15.289 3.38596 15.2405 3.34286C15.192 3.29976 15.1262 3.27554 15.0576 3.27554C14.9891 3.27554 14.9233 3.29976 14.8748 3.34286C14.8263 3.38596 14.7991 3.44443 14.7991 3.50538V3.73523H14.5405C14.4719 3.73523 14.4061 3.75944 14.3577 3.80255C14.3092 3.84565 14.2819 3.90412 14.2819 3.96507C14.2819 4.02603 14.3092 4.08449 14.3577 4.1276C14.4061 4.1707 14.4719 4.19492 14.5405 4.19492H14.7991V4.42476C14.7991 4.48572 14.8263 4.54418 14.8748 4.58729C14.9233 4.63039 14.9891 4.65461 15.0576 4.65461C15.1262 4.65461 15.192 4.63039 15.2405 4.58729C15.289 4.54418 15.3162 4.48572 15.3162 4.42476V4.19492H15.5748C15.6434 4.19492 15.7091 4.1707 15.7576 4.1276C15.8061 4.08449 15.8334 4.02603 15.8334 3.96507C15.8334 3.90412 15.8061 3.84565 15.7576 3.80255C15.7091 3.75944 15.6434 3.73523 15.5748 3.73523Z"
                    fill="white" />
                </svg>
            </div>
            <div className="flex flex-1 justify-center items-center flex-col gap-2.5">
                <p className="self-stretch text-[#000000] font-['Figtree'] flex items-center">
                    {text}
                </p>
            </div>
      </div>}
      {!isBot && 
        <div
        className="flex self-stretch justify-start items-start flex-row gap-2.5 rounded-lg">
            <div
            className="flex self-stretch justify-start items-start flex-row gap-2.5 rounded-lg items-center ">
            <div className="flex flex-1 justify-center items-start flex-col gap-2.5">
                <p className="self-stretch text-[#FFFFFF] font-['Figtree'] text-right">
                {text}
                </p>
            </div>
        </div>
        </div>}
    </div>
  );
};

export default Message;
